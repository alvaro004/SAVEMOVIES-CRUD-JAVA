/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alvaro.llano.interfazpleicula;

import conexionDB.Conectar;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author Alvaro Llano
 */
public class usuarios extends javax.swing.JInternalFrame {
    
    
    //----------------------------------------------------------//
    Connection coneccionsql;
    Statement sentenciasql;
    DefaultTableModel modelo_tabla;
    //----------------------------------------------------------//  

    /**
     * Creates new form usuarios
     */
    public usuarios() {
        initComponents();
        TextPrompt placeholder1 = new TextPrompt("Ingrese el nombre de usuario", nombre_user);
        coneccionsql = Conectar.getConnection();
        LlenarTabla();
        //CargarGenero();
        
        
        //BotonEditar.setEnabled(false);
        //BotonBorrar.setEnabled(false);
    }
    
    void LlenarTabla() {
        try {
            //encabezados de la tabla
            String[] titulos = {"ID", "Usuario"};
            String stsql = "SELECT idUuario, nombreUsuario FROM usuarios";
            modelo_tabla = new DefaultTableModel(null, titulos);
            sentenciasql = coneccionsql.createStatement();
            ResultSet rs = sentenciasql.executeQuery(stsql);

            //arreglo fila, para almacenar registros
            String[] fila = new String[2];
            
            //while para insertar registros en la tabla
            
            while (rs.next()) {
                fila[0] = rs.getString("idUuario");
                fila[1] = rs.getString("nombreUsuario");
                

                modelo_tabla.addRow(fila);
            }

            //agrego el default model
            TablaPersonas.setModel(modelo_tabla);

            //definir el ancho de las columnas
            int[] anchos = {100, 100};
            for (int i = 0; i < TablaPersonas.getColumnCount(); i++) {
                TablaPersonas.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }

            //escondemos la columna id en la tabla (finalidad estetica)
            //TablaPersonas.getColumnModel().getColumn(0).setMinWidth(0);
            //TablaPersonas.getColumnModel().getColumn(0).setMaxWidth(0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nombre_user = new javax.swing.JTextField();
        BotonGuardar = new javax.swing.JButton();
        CampoID = new javax.swing.JTextField();
        contrasena_user = new javax.swing.JPasswordField();
        BotonBorrar = new javax.swing.JButton();
        BotonEditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaPersonas = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);

        jPanel2.setBackground(new java.awt.Color(227, 234, 248));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(29, 43, 105));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REGISTAR USUARIOS");

        nombre_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombre_userActionPerformed(evt);
            }
        });

        BotonGuardar.setBackground(new java.awt.Color(0, 255, 51));
        BotonGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BotonGuardar.setForeground(new java.awt.Color(255, 255, 255));
        BotonGuardar.setText("GUARDAR");
        BotonGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonGuardarMouseClicked(evt);
            }
        });
        BotonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarActionPerformed(evt);
            }
        });

        CampoID.setEditable(false);
        CampoID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoIDActionPerformed(evt);
            }
        });

        contrasena_user.setText("jPasswordField1");

        BotonBorrar.setBackground(new java.awt.Color(255, 0, 0));
        BotonBorrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BotonBorrar.setForeground(new java.awt.Color(255, 255, 255));
        BotonBorrar.setText("BORRAR");
        BotonBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonBorrarMouseClicked(evt);
            }
        });
        BotonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBorrarActionPerformed(evt);
            }
        });

        BotonEditar.setBackground(new java.awt.Color(102, 102, 102));
        BotonEditar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BotonEditar.setForeground(new java.awt.Color(255, 255, 255));
        BotonEditar.setText("EDITAR");
        BotonEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonEditarMouseClicked(evt);
            }
        });
        BotonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contrasena_user)
                            .addComponent(nombre_user)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(CampoID, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(BotonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombre_user, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(contrasena_user, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BotonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(BotonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(CampoID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        TablaPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaPersonas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaPersonasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaPersonas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombre_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombre_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombre_userActionPerformed

    private void BotonGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonGuardarMouseClicked
        try {
            
            String nombreusuario = nombre_user.getText();
            String contrasenausuario = contrasena_user.getText();

            String sqlguardar = "insert into usuarios (nombreUsuario, passwordUsuario) values (?, ?)";
            PreparedStatement ps = coneccionsql.prepareStatement(sqlguardar);

            ps.setString(1, nombreusuario);
            ps.setString(2, contrasenausuario);
            

            int n = ps.executeUpdate();
            if (n > 0) {
                nombre_user.setText(""); //AL GUARDAR ESTE METODO VACIA EL CAMPO PARA INGRESAR UN NUEVO DATO
                contrasena_user.setText("");
                nombre_user.requestFocus(); // SE ENFOCA A ESTE ELEMENT PARA VOLVER A ESCRIBIR TEXTO
                JOptionPane.showMessageDialog(this, "Se guardó correctamente");
                LlenarTabla();

            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar");
            }
            //SE CIERRA LA CONEXION CON LA BASE DE DATOS
            ps.close();
        } catch (Exception e) {
            
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "Error: No se pudo registrar a la pelicula!");
        }
    }//GEN-LAST:event_BotonGuardarMouseClicked

    private void BotonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonGuardarActionPerformed

    private void CampoIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoIDActionPerformed

    private void TablaPersonasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPersonasMouseClicked
        if (evt.getButton() == 1) {
            BotonBorrar.setEnabled(true);
            int fila = TablaPersonas.getSelectedRow();
            try {
                String stsql = "SELECT idUuario, nombreUsuario, passwordUsuario FROM usuarios WHERE idUuario = " + TablaPersonas.getValueAt(fila, 0);
                sentenciasql = coneccionsql.createStatement();
                ResultSet rs = sentenciasql.executeQuery(stsql);
                rs.next();

                CampoID.setText(rs.getString("idUuario"));
                nombre_user.setText(rs.getString("nombreUsuario"));
                contrasena_user.setText(rs.getString("passwordUsuario"));
                

                BotonEditar.setEnabled(true);
                BotonGuardar.setEnabled(false);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_TablaPersonasMouseClicked

    private void BotonBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonBorrarMouseClicked
        try {
            String id = CampoID.getText();

            //Borrar registro en la base de datos
            String stborrar = "delete from usuarios where idUuario =" + id;
            PreparedStatement ps = coneccionsql.prepareStatement(stborrar);
            int n = ps.executeUpdate();
            if (n > 0) {
                JOptionPane.showMessageDialog(this, "Se borro correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Error al borrar");
            }
            ps.close();

            LlenarTabla();

            //limpiar formulario
            CampoID.setText("");
            
            nombre_user.setText(""); //AL GUARDAR ESTE METODO VACIA EL CAMPO PARA INGRESAR UN NUEVO DATO
            contrasena_user.setText("");
            

            nombre_user.requestFocus(); // SE ENFOCA A ESTE ELEMENT PARA VOLVER A ESCRIBIR TEXTO

            //Reiniciar el estado de los botones
            BotonGuardar.setEnabled(true);
            //BotonEditar.setEnabled(false);
            BotonBorrar.setEnabled(false);

        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_BotonBorrarMouseClicked

    private void BotonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBorrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonBorrarActionPerformed

    private void BotonEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonEditarMouseClicked
        try {
            String id = CampoID.getText();
            String nombreuser = nombre_user.getText();
            String contrasenauser = contrasena_user.getText();
            

            //Guardar en la base de datos
            String stactualizar = "UPDATE usuarios SET nombreUsuario=?, passwordUsuario=? WHERE idUuario=?";
            PreparedStatement ps = coneccionsql.prepareStatement(stactualizar);
            ps.setString(1, nombreuser);
            ps.setString(2, contrasenauser);
            ps.setString(3, id);
            int n = ps.executeUpdate();
            if (n > 0) {

                //limpiar formulario
                CampoID.setText("");
               
                nombre_user.setText(""); //AL GUARDAR ESTE METODO VACIA EL CAMPO PARA INGRESAR UN NUEVO DATO
                contrasena_user.setText("");
                
                nombre_user.requestFocus(); // SE ENFOCA A ESTE ELEMENT PARA VOLVER A ESCRIBIR TEXTO

                //reiniciar el estado de los botones
                BotonGuardar.setEnabled(true);
                BotonEditar.setEnabled(false);
                BotonBorrar.setEnabled(false);

                LlenarTabla();
                JOptionPane.showMessageDialog(this, "Se actualizo correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar");
            }
            ps.close();

        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_BotonEditarMouseClicked

    private void BotonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonEditarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonBorrar;
    private javax.swing.JButton BotonEditar;
    private javax.swing.JButton BotonGuardar;
    private javax.swing.JTextField CampoID;
    private javax.swing.JTable TablaPersonas;
    private javax.swing.JPasswordField contrasena_user;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombre_user;
    // End of variables declaration//GEN-END:variables
}
